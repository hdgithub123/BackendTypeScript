CREATE DATABASE MYDATABASE CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

use MYDATABASE;
-- Các quy ước
-- các bẳng được lấy theo:
-- id: id CHAR(36) PRIMARY KEY DEFAULT (UUID()), CHECK (id <> ''),
-- code: code VARCHAR(100) NOT NULL, -- mã do người dùng đặt
-- name: name VARCHAR(255) NOT NULL,
-- các khác không đặc biệt như address, image,.. thì lưu VARCHAR(255),

CREATE TABLE organizations (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    CHECK (id <> ''),
    code VARCHAR(100) UNIQUE NOT NULL,
    name VARCHAR(255) NOT NULL,
    address VARCHAR(255),
    isActive TINYINT(1) NOT NULL DEFAULT 0,
    isSystem TINYINT(1) DEFAULT 0, 
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO organizations 
VALUES 
('00000000-0000-0000-0000-000000000001', 'supperOrganization', 'System Org', '', 1, 1, 'system', 'system', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);

INSERT INTO organizations (
    code, name, address, isActive, isSystem, createdBy, updatedBy
) VALUES
    ('ORG001', 'Công ty TNHH ABC', '123 Đường Láng, Hà Nội', 1, 0, 'admin', 'admin'),
    ('ORG002', 'Công ty B', 'Trụ sở chính - Tầng 5', 0, 1, 'system', 'system'),
    ('ORG003', 'Công ty C', '', 1, 0, 'user01', 'user01');



SET @SupperOrganization = (SELECT id FROM organizations WHERE code = 'supperOrganization');
SET @Organizations1 = (SELECT id FROM organizations WHERE code = 'ORG001');
SET @Organizations2 = (SELECT id FROM organizations WHERE code = 'ORG002');
SET @Organizations3 = (SELECT id FROM organizations WHERE code = 'ORG003');


CREATE TABLE users (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    CHECK (id <> ''),
    code VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    name VARCHAR(255),
    address VARCHAR(255),
    email VARCHAR(100) NOT NULL,
    phone VARCHAR(20),
    image VARCHAR(255),
    organizationId CHAR(36) NOT NULL,
    FOREIGN KEY (organizationId) REFERENCES organizations(id) ON DELETE CASCADE,
    UNIQUE (organizationId, code),
	UNIQUE (organizationId, email),
    isActive TINYINT(1) NOT NULL DEFAULT 0,
    isSystem TINYINT(1) DEFAULT 0, 
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO users (
    code, password, name, address, email, phone, image, organizationId,
    isActive, isSystem, createdBy, updatedBy
) VALUES
('supperAmin', 'hashed_password_1', 'Nguyễn Văn A', '12 Lê Lợi, Hà Nội', 'a.nguyen@example.com', '0901234567', 'avatar1.jpg', @SupperOrganization, 1, 0, 'admin', 'admin'),
('admin', 'hashed_password_2', 'System Admin', 'Trụ sở chính', 'sys.admin@example.com', '0987654321', 'sys_avatar.jpg', @Organizations1, 1, 1, 'system', 'system'),
('admin', 'hashed_password_3', 'Trần Thị B', '45 Nguyễn Trãi, TP.HCM', 'b.tran@example.com', '0912345678', 'avatar2.jpg', @Organizations2, 1, 0, 'user01', 'user01'),
('admin', 'hashed_password_3', 'Trần Thị B', '45 Nguyễn Trãi, TP.HCM', 'b.tran@example.com', '0912345678', 'avatar2.jpg', @Organizations3, 1, 0, 'user01', 'user01'),
('user1', 'hashed_password_4', 'Phạm Văn C', '88 Trần Hưng Đạo, Đà Nẵng', 'c.pham@example.com', '0934567890', 'avatar3.jpg', @Organizations1, 0, 0, 'admin', 'admin'),
('user2', 'hashed_password_5', 'System Bot', 'Nội bộ', 'bot@example.com', '0976543210', 'bot_avatar.jpg', @Organizations1, 0, 1, 'system', 'system');

SET SQL_SAFE_UPDATES = 0;
UPDATE users 
SET password = '$2b$10$KzyhMc9ylHx6xye2T11SruhtOQ7YPLrx/AlRBxz.n6NJKA7LbwJDy'
WHERE code = 'admin';

UPDATE users 
SET password = '$2b$10$KzyhMc9ylHx6xye2T11SruhtOQ7YPLrx/AlRBxz.n6NJKA7LbwJDy'
WHERE code = 'user1';


SET @supperAmin = (SELECT id FROM users WHERE code = 'supperAmin');
SET @admin1 = (SELECT id FROM users WHERE code = 'admin' AND organizationId = @Organizations1);
SET @user1 = (SELECT id FROM users WHERE code = 'user1' AND organizationId = @Organizations1);
SET @user2 = (SELECT id FROM users WHERE code = 'user2' AND organizationId = @Organizations1);
SET @admin2 = (SELECT id FROM users WHERE code = 'admin' AND organizationId = @Organizations2);
SET @admin3 = (SELECT id FROM users WHERE code = 'admin' AND organizationId = @Organizations3);


CREATE TABLE roles (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    code VARCHAR(100) NOT NULL, -- Mã tùy chỉnh có thể thay đổi theo organizationsId
    description TEXT,
    organizationId CHAR(36) NOT NULL,
    FOREIGN KEY (organizationId) REFERENCES organizations(id) ON DELETE CASCADE,
    UNIQUE (organizationId, code),
    isSystem TINYINT(1) DEFAULT 0,
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CHECK (id <> '')
);


INSERT INTO roles (name, code, description,organizationId,isSystem)
VALUES
    ('Administrator', 'Administrator', 'Quản lý toàn hệ thống', @Organizations1, FALSE),
    ('Administrator', 'Administrator', 'Quản lý toàn hệ thống', @Organizations2,FALSE),
    ('Administrator', 'Administrator', 'Quản lý toàn hệ thống', @Organizations3,FALSE),
    ('Editor', 'EDITOR_ROLE', 'Có quyền chỉnh sửa nội dung', @Organizations1,FALSE),
    ('Viewer', 'VIEWER_ROLE', 'Chỉ có quyền xem nội dung', @Organizations1, FALSE),
    ('Manager', 'MANAGER_ROLE', 'Quản lý người dùng và phân quyền', @Organizations1,FALSE),
    ('Support', 'SUPPORT_ROLE', 'Hỗ trợ kỹ thuật và người dùng', @Organizations1, FALSE);



SET @Administrator1 = (SELECT id FROM roles WHERE code = 'Administrator' AND organizationId = @Organizations1 );

CREATE TABLE rights (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(50) NOT NULL,
    code VARCHAR(50) UNIQUE NOT NULL, -- Mã quyền có thể thay đổi
    description TEXT,
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    isSystem TINYINT(1) DEFAULT 0,
    isOwner TINYINT(1) DEFAULT 0,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CHECK (id <> '')
);



INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
('Login', 'Login', 'Quyền đăng nhập hệ thống', 'System', TRUE, FALSE),
('Loguot', 'Loguot', 'Quyền đăng xuất khỏi hệ thống', 'System', TRUE, FALSE),

-- User
('view user', 'GetUser', 'Xem thông tin một người dùng', 'System', TRUE, FALSE),
('add user', 'PostUser', 'Thêm một người dùng mới', 'System', TRUE, FALSE),
('update user', 'PutUser', 'Cập nhật thông tin người dùng', 'System', TRUE, FALSE),
('Delete user', 'DeleteUser', 'Xóa một người dùng', 'System', TRUE, FALSE),
('view users', 'GetUsers', 'Xem danh sách người dùng', 'System', TRUE, FALSE),
('add users', 'PostUsers', 'Thêm nhiều người dùng', 'System', TRUE, FALSE),
('update users', 'PutUsers', 'Cập nhật danh sách người dùng', 'System', TRUE, FALSE),
('Delete users', 'DeleteUsers', 'Xóa nhiều người dùng', 'System', TRUE, FALSE),
('export Users', 'ExportUsers', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE),

-- Rights
('view Right', 'GetRight', 'Xem thông tin một quyền', 'System', TRUE, FALSE),
('view Rights', 'GetRights', 'Xem danh sách quyền hệ thống', 'System', TRUE, FALSE),
('export Rights', 'ExportRights', 'Xuất khẩu danh sách quyền', 'System', TRUE, FALSE),
-- Rights of owner
('view RightOfOwner', 'GetRightOfOwner', 'Xem một quyền cụ thể của chủ sở hữu', 'System', TRUE, TRUE),
('view RightsOfOwner', 'GetRightsOfOwner', 'Xem danh sách quyền của chủ sở hữu', 'System', TRUE, TRUE),
('export RightsOfOwner', 'ExportRightsOfOwner', 'Xuất khẩu danh sách quyền của chủ sở hữu', 'System', TRUE, TRUE);

-- Role
('view role', 'GetRole', 'Xem một vai trò cụ thể', 'System', TRUE, FALSE),
('add role', 'PostRole', 'Thêm một vai trò mới', 'System', TRUE, FALSE),
('update role', 'PutRole', 'Cập nhật vai trò', 'System', TRUE, FALSE),
('Delete role', 'DeleteRole', 'Xóa một vai trò', 'System', TRUE, FALSE),
('view Roles', 'GetRoles', 'Xem danh sách vai trò', 'System', TRUE, FALSE),
('add Roles', 'PostRoles', 'Thêm nhiều vai trò', 'System', TRUE, FALSE),
('update Roles', 'PutRoles', 'Cập nhật nhiều vai trò', 'System', TRUE, FALSE),
('Delete Roles', 'DeleteRoles', 'Xóa nhiều vai trò', 'System', TRUE, FALSE),
('export Roles', 'ExportRoles', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE),

-- Zone
('view zone', 'GetZone', 'Xem một khu vực', 'System', TRUE, FALSE),
('add zone', 'PostZone', 'Thêm khu vực mới', 'System', TRUE, FALSE),
('update zone', 'PutZone', 'Cập nhật khu vực', 'System', TRUE, FALSE),
('Delete zone', 'DeleteZone', 'Xóa khu vực', 'System', TRUE, FALSE),
('view zones', 'GetZones', 'Xem danh sách khu vực', 'System', TRUE, FALSE),
('add zones', 'PostZones', 'Thêm nhiều khu vực', 'System', TRUE, FALSE),
('update zones', 'PutZones', 'Cập nhật nhiều khu vực', 'System', TRUE, FALSE),
('Delete zones', 'DeleteZones', 'Xóa nhiều khu vực', 'System', TRUE, FALSE),
('export Zones', 'ExportZones', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE),

-- RoleVsRight
('view RoleVsRight', 'GetRoleRight', 'Xem quyền gán cho vai trò', 'System', TRUE, FALSE),
('add RoleRight', 'PostRoleRight', 'Thêm quyền vào vai trò', 'System', TRUE, FALSE),
('update RoleRight', 'PutRoleRight', 'Cập nhật quyền của vai trò', 'System', TRUE, FALSE),
('Delete RoleRight', 'DeleteRoleRight', 'Xóa quyền khỏi vai trò', 'System', TRUE, FALSE),
('view RoleRights', 'GetRoleRights', 'Xem danh sách quyền theo vai trò', 'System', TRUE, FALSE),
('add RoleRights', 'PostRoleRights', 'Gán nhiều quyền cho vai trò', 'System', TRUE, FALSE),
('update RoleRights', 'PutRoleRights', 'Cập nhật nhiều quyền cho vai trò', 'System', TRUE, FALSE),
('Delete RoleRights', 'DeleteRoleRights', 'Xóa nhiều quyền khỏi vai trò', 'System', TRUE, FALSE),
('export RoleRights', 'ExportRoleRights', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE),

-- UserZoneRole
('view UserZoneRole', 'GetUserZoneRole', 'Xem vai trò của người dùng theo khu vực', 'System', TRUE, FALSE),
('add UserZoneRole', 'PostUserZoneRole', 'Gán vai trò cho người dùng theo khu vực', 'System', TRUE, FALSE),
('update UserZoneRole', 'PutUserZoneRole', 'Cập nhật vai trò của người dùng theo khu vực', 'System', TRUE, FALSE),
('Delete UserZoneRole', 'DeleteUserZoneRole', 'Xóa vai trò khỏi người dùng theo khu vực', 'System', TRUE, FALSE),
('view UserZoneRoles', 'GetUserZoneRoles', 'Xem nhiều vai trò của người dùng theo khu vực', 'System', TRUE, FALSE),
('add UserZoneRoles', 'PostUserZoneRoles', 'Gán nhiều vai trò cho người dùng theo khu vực', 'System', TRUE, FALSE),
('update UserZoneRoles', 'PutUserZoneRoles', 'Cập nhật nhiều vai trò của người dùng theo khu vực', 'System', TRUE, FALSE),
('Delete UserZoneRoles', 'DeleteUserZoneRoles', 'Xóa nhiều vai trò khỏi người dùng theo khu vực', 'System', TRUE, FALSE),
('export UserZoneRoles', 'ExportUserZoneRoles', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE);




CREATE TABLE roles_rights (
    roleId CHAR(36),
    rightId CHAR(36),
    isActive TINYINT(1) NOT NULL,
    isSystem TINYINT(1) DEFAULT 0,
    PRIMARY KEY (roleId, rightId),
    FOREIGN KEY (roleId) REFERENCES roles(id) ON DELETE CASCADE,
    FOREIGN KEY (rightId) REFERENCES rights(id) ON DELETE CASCADE,
    CHECK (roleId <> '' AND rightId <> '')
);






CREATE TABLE zones (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    -- code VARCHAR(100) UNIQUE NOT NULL, -- Mã quyền có thể thay đổi
    code VARCHAR(100) NOT NULL, -- Mã quyền có thể thay đổi
    address TEXT,
    description TEXT,
    parentId CHAR(36) NULL,
    organizationId CHAR(36) NOT NULL,
    FOREIGN KEY (organizationId) REFERENCES organizations(id) ON DELETE CASCADE,
    -- FOREIGN KEY (organizationId) REFERENCES organizations(id),
    UNIQUE (organizationId, code),
    isSystem TINYINT(1) DEFAULT 0,
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parentId) REFERENCES zones(id),
    CHECK (id <> '')
);


CREATE TABLE branches (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    code VARCHAR(100) UNIQUE NOT NULL, -- Mã chi nhánh có thể thay đổi
    address TEXT,
    description TEXT,
    organizationId CHAR(36) NOT NULL,
    FOREIGN KEY (organizationId) REFERENCES organizations(id) ON DELETE CASCADE,
    UNIQUE (organizationId, code),
    isActive TINYINT(1) DEFAULT 0,
    isSystem TINYINT(1) DEFAULT 0,
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CHECK (id <> '')
);

-- tạo chi nhánh General
INSERT INTO branches (id, name, code, address, description, organizationId,isActive, createdBy) VALUES
(UUID(), 'General', 'General', 'Trụ sở chính', 'Chi nhánh tổng', @Organizations1, 1, 'system');



INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- branch
('view Branch', 'GetBranch', 'Xem thông tin một chi nhánh', 'System', TRUE, FALSE),
('add Branch', 'PostBranch', 'Thêm một chi nhánh mới', 'System', TRUE, FALSE),
('update Branch', 'PutBranch', 'Cập nhật thông tin chi nhánh', 'System', TRUE, FALSE),
('Delete Branch', 'DeleteBranch', 'Xóa một chi nhánh', 'System', TRUE, FALSE),
('view Branches', 'GetBranches', 'Xem danh sách chi nhánh', 'System', TRUE, FALSE),
('add Branches', 'PostBranches', 'Thêm nhiều chi nhánh', 'System', TRUE, FALSE),
('update Branches', 'PutBranches', 'Cập nhật danh sách chi nhánh', 'System', TRUE, FALSE),
('Delete Branches', 'DeleteBranches', 'Xóa nhiều chi nhánh', 'System', TRUE, FALSE),
('export Branches', 'ExportBranches', 'Xuất khẩu danh sách excell', 'System', TRUE, FALSE);






CREATE TABLE departments (
    id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    code VARCHAR(100) NOT NULL, -- Mã phòng ban có thể thay đổi
    address TEXT,
    description TEXT,
    parentId CHAR(36) NULL,
    branchId CHAR(36) NOT NULL,
    FOREIGN KEY (branchId) REFERENCES branches(id) ON DELETE CASCADE,
    UNIQUE (branchId, code),
    isActive TINYINT(1) DEFAULT 0,
    isSystem TINYINT(1) DEFAULT 0,
    createdBy VARCHAR(100),
    updatedBy VARCHAR(100),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parentId) REFERENCES departments(id),
    CHECK (id <> '')
);


-- Trigger để kiểm tra vòng lặp trong cấu trúc tổ chức (phòng ban)

DELIMITER $$

CREATE TRIGGER trg_departments_no_loop_insert
BEFORE INSERT ON departments
FOR EACH ROW
BEGIN
    DECLARE hasLoop INT DEFAULT 0;

    IF NEW.parentId IS NOT NULL THEN
        SELECT COUNT(*) INTO hasLoop
        FROM (
            WITH RECURSIVE cte AS (
                SELECT id, parentId
                FROM departments
                WHERE id = NEW.parentId

                UNION ALL

                SELECT d.id, d.parentId
                FROM departments d
                JOIN cte c ON d.id = c.parentId
            )
            SELECT id FROM cte
        ) t
        WHERE t.id = NEW.id;

        IF hasLoop > 0 THEN
            SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'Hierarchy loop detected (INSERT departments).';
        END IF;
    END IF;
END$$

CREATE TRIGGER trg_departments_no_loop_update
BEFORE UPDATE ON departments
FOR EACH ROW
BEGIN
    DECLARE hasLoop INT DEFAULT 0;

    IF NEW.parentId IS NOT NULL AND NEW.parentId <> OLD.parentId THEN
        SELECT COUNT(*) INTO hasLoop
        FROM (
            WITH RECURSIVE cte AS (
                SELECT id, parentId
                FROM departments
                WHERE id = NEW.parentId

                UNION ALL

                SELECT d.id, d.parentId
                FROM departments d
                JOIN cte c ON d.id = c.parentId
            )
            SELECT id FROM cte
        ) t
        WHERE t.id = NEW.id;

        IF hasLoop > 0 THEN
            SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'Hierarchy loop detected (UPDATE departments).';
        END IF;
    END IF;
END$$

DELIMITER ;













INSERT INTO zones (id, name, code, address, description, parentId, createdBy,organizationId) VALUES
(UUID(), 'Tổng Công Ty', 'TC001', 'Hà Nội', 'Trụ sở chính', NULL, 'admin',@Organizations1);

SET @parent_tct = (SELECT id FROM zones WHERE code = 'TC001'AND organizationId = @Organizations1);

INSERT INTO zones (id, name, code, address, description, parentId, createdBy,organizationId) VALUES
(UUID(), 'Chi Nhánh 1', 'CN001', 'TP HCM', 'Chi nhánh miền Nam', @parent_tct, 'admin',@Organizations1),
(UUID(), 'Chi Nhánh 2', 'CN002', 'Hà Nội', 'VP miền Bắc', @parent_tct, 'admin',@Organizations1),
(UUID(), 'Chi nhánh 3', 'CN003', 'Đà Nẵng', 'Chi nhánh miền Trung', @parent_tct, 'admin',@Organizations1);



SET @cn1 = (SELECT id FROM zones WHERE code = 'CN001' AND organizationId = @Organizations1);
SET @cn2 = (SELECT id FROM zones WHERE code = 'CN002' AND organizationId = @Organizations1);

INSERT INTO zones (id, name, code, address, description, parentId, createdBy,organizationId) VALUES
(UUID(), 'Phòng Kinh Doanh HCM', 'P11', 'TP HCM', 'Kinh doanh miền Nam', @cn1, 'admin',@Organizations1),
(UUID(), 'Phòng Nhân Sự HCM', 'P12', 'TP HCM', 'Nhân sự miền Nam', @cn1, 'admin',@Organizations1),
(UUID(), 'Phòng Kinh Doanh Đà Nẵng', 'PCN21', 'Đà Nẵng', 'Kinh doanh miền Trung', @cn2, 'admin',@Organizations1),
(UUID(), 'Phòng Nhân Sự Đà Nẵng', 'PCN22', 'Đà Nẵng', 'Nhân sự miền Trung', @cn2, 'admin',@Organizations1);


CREATE TABLE users_zones_roles (
    userId CHAR(36),
    roleId CHAR(36),
    zoneId CHAR(36),
    isActive BOOLEAN,
    isSystem TINYINT(1) DEFAULT 0,
    PRIMARY KEY (userId, roleId, zoneId),
    FOREIGN KEY (userId) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (roleId) REFERENCES roles(id) ON DELETE CASCADE,
    FOREIGN KEY (zoneId) REFERENCES zones(id) ON DELETE CASCADE,
    CHECK (userId <> '' AND roleId <> '' AND zoneId <> '')
);



INSERT INTO users_zones_roles (userId, roleId, zoneId,isActive)
VALUES
    (@admin1, @Administrator1, @parent_tct, TRUE); -- ad admin cho toan bo 



CREATE TABLE activityLogs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    organizationId CHAR(36),
    zoneId CHAR(36),
    userId CHAR(36),              -- ID người dùng thực hiện hành động
    username VARCHAR(100),              -- Tên người dùng thực hiện hành động
    time DATETIME DEFAULT CURRENT_TIMESTAMP,     -- Thời gian ghi log
    action VARCHAR(50),                 -- Loại hành động: INSERT, UPDATE, DELETE, ACCESS...
    tableName VARCHAR(100),                     -- Tên bảng bị tác động
    description TEXT,                            -- Mô tả chi tiết hành động
    ip VARCHAR(45),                              -- Địa chỉ IP của client
    oldData JSON,                               -- Dữ liệu cũ (trước khi thay đổi)
    activeData JSON,                               -- Dữ liệu mới (sau khi thay đổi)
    browserInfo JSON,                           -- Thông tin trình duyệt (user-agent, OS, device...)
    protocol VARCHAR(10),                        -- Giao thức: http hoặc https
    hostname VARCHAR(255),                       -- Tên miền hoặc host truy cập
    originalUrl TEXT,                           -- URL đầy đủ được truy cập
    method VARCHAR(10),                          -- Phương thức HTTP: GET, POST, PUT...
    port INT,                                    -- Cổng kết nối
    secure BOOLEAN                               -- Có dùng HTTPS không (true/false)
);

INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- activitylog
('view ActivityLogs','GetActivityLogs','Xem nhật ký truy cập','System' , TRUE, FALSE),
('add ActivityLogs','PostActivityLogs','Thêm vào nhật ký truy cập','System', TRUE, FALSE),
('Delete ActivityLogs','DeleteActivityLogs','Xóa nhật ký truy cập','System', TRUE, FALSE);





CREATE TABLE template_contents (
  id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
  code VARCHAR(100) UNIQUE NOT NULL, --chua sua lai
  organizationId CHAR(36) NOT NULL,
  FOREIGN KEY (organizationId) REFERENCES organizations(id) ON DELETE CASCADE,
  UNIQUE (organizationId, code),
  name VARCHAR(255) NOT NULL,
  scopeName VARCHAR(255) NOT NULL,
  content JSON,
  description VARCHAR(255),
  isActive TINYINT(1) NOT NULL DEFAULT 1,
  isSystem TINYINT(1) DEFAULT 0,
  createdBy VARCHAR(100),
  updatedBy VARCHAR(100),
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

  CHECK (id <> '')
);


INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- template contents
('view TemplateContent', 'GetTemplateContent', 'Xem nội dung mẫu', 'System', TRUE, FALSE),
('add TemplateContent', 'PostTemplateContent', 'Thêm nội dung mẫu', 'System', TRUE, FALSE),
('update TemplateContent', 'PutTemplateContent', 'Cập nhật nội dung mẫu', 'System', TRUE, FALSE),
('Delete TemplateContent', 'DeleteTemplateContent', 'Xóa nội dung mẫu', 'System', TRUE, FALSE),
('view TemplateContents', 'GetTemplateContents', 'Xem nhiều nội dung mẫu', 'System', TRUE, FALSE),
('add TemplateContents', 'PostTemplateContents', 'Thêm nhiều nội dung mẫu', 'System', TRUE, FALSE),
('update TemplateContents', 'PutTemplateContents', 'Cập nhật nhiều nội dung mẫu', 'System', TRUE, FALSE),
('Delete TemplateContents', 'DeleteTemplateContents', 'Xóa nhiều nội dung mẫu', 'System', TRUE, FALSE);


INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- user template contents
('view UserTemplateContent', 'GetUserTemplateContent', 'Xem nội dung mẫu của người dùng', 'System', TRUE, FALSE),
('add UserTemplateContent', 'PostUserTemplateContent', 'Thêm nội dung mẫu của người dùng', 'System', TRUE, FALSE),
('update UserTemplateContent', 'PutUserTemplateContent', 'Cập nhật nội dung mẫu của người dùng', 'System', TRUE, FALSE),
('Delete UserTemplateContent', 'DeleteUserTemplateContent', 'Xóa nội dung mẫu của người dùng', 'System', TRUE, FALSE);


INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- user template contents
('view UsersTemplateContent', 'GetUsersTemplateContent', 'Xem nội dung mẫu của danh sách người dùng', 'System', TRUE, FALSE),
('add UsersTemplateContent', 'PostUsersTemplateContent', 'Thêm nội dung mẫu của danh sách người dùng', 'System', TRUE, FALSE),
('update UsersTemplateContent', 'PutUsersTemplateContent', 'Cập nhật nội dung mẫu của danh sách người dùng', 'System', TRUE, FALSE),
('Delete UsersTemplateContent', 'DeleteUsersTemplateContent', 'Xóa nội dung mẫu của danh sách người dùng', 'System', TRUE, FALSE);



INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- organization
('view Organization', 'GetOrganization', 'Xem thông tin một tổ chức', 'System', TRUE, TRUE),
('add Organization', 'PostOrganization', 'Thêm một tổ chức mới', 'System', TRUE, TRUE),
('update Organization', 'PutOrganization', 'Cập nhật thông tin tổ chức', 'System', TRUE, TRUE),
('Delete Organization', 'DeleteOrganization', 'Xóa một tổ chức', 'System', TRUE, TRUE),
('view Organizations', 'GetOrganizations', 'Xem danh sách tổ chức', 'System', TRUE, TRUE),
('add Organizations', 'PostOrganizations', 'Thêm nhiều tổ chức', 'System', TRUE, TRUE),
('update Organizations', 'PutOrganizations', 'Cập nhật danh sách tổ chức', 'System', TRUE, TRUE),
('Delete Organizations', 'DeleteOrganizations', 'Xóa nhiều tổ chức', 'System', TRUE, TRUE),
('export Organizations', 'ExportOrganizations', 'Xuất khẩu danh sách excell', 'System', TRUE, TRUE);



INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- organizations template contents
('view OrganizationsTemplateContent', 'GetOrganizationsTemplateContent', 'Xem nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('add OrganizationsTemplateContent', 'PostOrganizationsTemplateContent', 'Thêm nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('update OrganizationsTemplateContent', 'PutOrganizationsTemplateContent', 'Cập nhật nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('Delete OrganizationsTemplateContent', 'DeleteOrganizationsTemplateContent', 'Xóa nội dung mẫu của tổ chức', 'System', TRUE, TRUE);

-- organization template contents
('view OrganizationTemplateContent', 'GetOrganizationTemplateContent', 'Xem nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('add OrganizationTemplateContent', 'PostOrganizationTemplateContent', 'Thêm nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('update OrganizationTemplateContent', 'PutOrganizationTemplateContent', 'Cập nhật nội dung mẫu của tổ chức', 'System', TRUE, TRUE),
('Delete OrganizationTemplateContent', 'DeleteOrganizationTemplateContent', 'Xóa nội dung mẫu của tổ chức', 'System', TRUE, TRUE);

INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- right template contents
('view RightTemplateContent', 'GetRightTemplateContent', 'Xem nội dung mẫu của quyền', 'System', TRUE, FALSE),
('add RightTemplateContent', 'PostRightTemplateContent', 'Thêm nội dung mẫu của quyền', 'System', TRUE, FALSE),
('update RightTemplateContent', 'PutRightTemplateContent', 'Cập nhật nội dung mẫu của quyền', 'System', TRUE, FALSE),
('Delete RightTemplateContent', 'DeleteRightTemplateContent', 'Xóa nội dung mẫu của quyền', 'System', TRUE, FALSE),


-- right of owner template contents
('view RightOfOwnerTemplateContent', 'GetRightOfOwnerTemplateContent', 'Xem nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('add RightOfOwnerTemplateContent', 'PostRightOfOwnerTemplateContent', 'Thêm nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('update RightOfOwnerTemplateContent', 'PutRightOfOwnerTemplateContent', 'Cập nhật nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('Delete RightOfOwnerTemplateContent', 'DeleteRightOfOwnerTemplateContent', 'Xóa nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),


-- rights template contents
('view RightsTemplateContent', 'GetRightsTemplateContent', 'Xem nội dung mẫu của quyền', 'System', TRUE, FALSE),
('add RightsTemplateContent', 'PostRightsTemplateContent', 'Thêm nội dung mẫu của quyền', 'System', TRUE, FALSE),
('update RightsTemplateContent', 'PutRightsTemplateContent', 'Cập nhật nội dung mẫu của quyền', 'System', TRUE, FALSE),
('Delete RightsTemplateContent', 'DeleteRightsTemplateContent', 'Xóa nội dung mẫu của quyền', 'System', TRUE, FALSE),

-- rights of owner template contents
('view RightsOfOwnerTemplateContent', 'GetRightsOfOwnerTemplateContent', 'Xem nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('add RightsOfOwnerTemplateContent', 'PostRightsOfOwnerTemplateContent', 'Thêm nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('update RightsOfOwnerTemplateContent', 'PutRightsOfOwnerTemplateContent', 'Cập nhật nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE),
('Delete RightsOfOwnerTemplateContent', 'DeleteRightsOfOwnerTemplateContent', 'Xóa nội dung mẫu của quyền chủ sở hữu', 'System', TRUE, TRUE);

INSERT INTO rights (name, code, description, createdBy,isSystem,isOwner) VALUES
-- role template contents
('view RoleTemplateContent', 'GetRoleTemplateContent', 'Xem nội dung mẫu của vai trò', 'System', TRUE, FALSE),
('add RoleTemplateContent', 'PostRoleTemplateContent', 'Thêm nội dung mẫu của vai trò', 'System', TRUE, FALSE),
('update RoleTemplateContent', 'PutRoleTemplateContent', 'Cập nhật nội dung mẫu của vai trò', 'System', TRUE, FALSE),
('Delete RoleTemplateContent', 'DeleteRoleTemplateContent', 'Xóa nội dung mẫu của vai trò', 'System', TRUE, FALSE),
-- roles template contents
('view RolesTemplateContent', 'GetRolesTemplateContent', 'Xem nội dung mẫu của nhiều vai trò', 'System', TRUE, FALSE),
('add RolesTemplateContent', 'PostRolesTemplateContent', 'Thêm nội dung mẫu của nhiều vai trò', 'System', TRUE, FALSE),
('update RolesTemplateContent', 'PutRolesTemplateContent', 'Cập nhật nội dung mẫu của nhiều vai trò', 'System', TRUE, FALSE),
('Delete RolesTemplateContent', 'DeleteRolesTemplateContent', 'Xóa nội dung mẫu của nhiều vai trò', 'System', TRUE, FALSE);



-- gán tất cả quyền vào Administrator không có vai trò isOwner
INSERT IGNORE INTO roles_rights (roleId, rightId, isActive)
SELECT r.id, rt.id, TRUE
FROM roles r
JOIN rights rt ON rt.isOwner = FALSE
WHERE r.code = 'Administrator';